version: 0.2

env:
  variables:
    TF_VERSION: "0.12.20" 

phases:
  install:
    runtime-versions:
      golang: 1.13

    commands:
      # install required binary
      - "curl -s -qL -o /usr/bin/jq https://stedolan.github.io/jq/download/linux64/jq"
      - "chmod +x /usr/bin/jq"
      - "cd /usr/bin"
      - "curl -s -qL -o terraform.zip https://releases.hashicorp.com/terraform/${TF_VERSION}/terraform_${TF_VERSION}_linux_amd64.zip"
      - "unzip -o terraform.zip"
  
  pre_build:
    commands:
      # Workaround until TF supports creds via Task Roles when running on ECS or CodeBuild
      # See: https://github.com/hashicorp/terraform/issues/8746
      - export AWS_RAW_CRED=$(curl --silent http://169.254.170.2:80$AWS_CONTAINER_CREDENTIALS_RELATIVE_URI)
      - export AWS_ACCESS_KEY_ID=$(echo $AWS_RAW_CRED | jq -r '.AccessKeyId')
      - export AWS_SECRET_ACCESS_KEY=$(echo $AWS_RAW_CRED | jq -r '.SecretAccessKey')
      - export AWS_SESSION_TOKEN=$(echo $AWS_RAW_CRED | jq -r '.Token')
      #- yum update -y
      - cd "$CODEBUILD_SRC_DIR"
      - ls -al
      - ./install_tflint.sh && rm -f install_tflint.sh
      
      #VALIDATION TEST---- Linting using TFLint to check for clear and obvious errors. 
      - terraform --version
      - cd "$CODEBUILD_SRC_DIR" && cd app/
      - tflint --format=json
      - cd "$CODEBUILD_SRC_DIR"
      - tflint --format=json

      #UNIT and INTEGRATION TEST ------ Running go test command from the test folder to do an automatic build and destroy of the stack.
      #- cd test/ && go test -v
      

  build:
    commands:
     # - source /tmp/aws_cred_export.txt && terraform remote config -backend=s3 -backend-config="bucket=${TerraformStateBucket}" -backend-config="key=terraform.tfstate"
      #- source /tmp/aws_cred_export.txt &&
      - cd "$CODEBUILD_SRC_DIR"
      - terraform init && terraform apply -auto-approve
#      - terraform destroy -auto-approve